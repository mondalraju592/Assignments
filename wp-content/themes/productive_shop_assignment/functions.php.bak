<?php
/**
 * Twenty Twenty-Two functions and definitions
 *
 * @link https://developer.wordpress.org/themes/basics/theme-functions/
 *
 * @package WordPress
 * @subpackage Twenty_Twenty_Two
 * @since Twenty Twenty-Two 1.0
 */


if ( ! function_exists( 'twentytwentytwo_support' ) ) :

	/**
	 * Sets up theme defaults and registers support for various WordPress features.
	 *
	 * @since Twenty Twenty-Two 1.0
	 *
	 * @return void
	 */
	function twentytwentytwo_support() {

		// Add support for block styles.
		add_theme_support( 'wp-block-styles' );

		// Enqueue editor styles.
		add_editor_style( 'style.css' );

	}

endif;

add_action( 'after_setup_theme', 'twentytwentytwo_support' );

if ( ! function_exists( 'twentytwentytwo_styles' ) ) :

	/**
	 * Enqueue styles.
	 *
	 * @since Twenty Twenty-Two 1.0
	 *
	 * @return void
	 */
	function twentytwentytwo_styles() {
		// Register theme stylesheet.
		$theme_version = wp_get_theme()->get( 'Version' );

		$version_string = is_string( $theme_version ) ? $theme_version : false;
		wp_register_style(
			'twentytwentytwo-style',
			get_template_directory_uri() . '/style.css',
			array(),
			$version_string
		);

		// Enqueue theme stylesheet.
		wp_enqueue_style( 'twentytwentytwo-style' );

	}

endif;

add_action( 'wp_enqueue_scripts', 'twentytwentytwo_styles' );

// Add block patterns
require get_template_directory() . '/inc/block-patterns.php';

//Enque css and js
wp_register_style( 'Font_Awesome', 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css' );
wp_enqueue_style('Font_Awesome');

wp_register_style( 'bootstrap_style', 'https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css' );
wp_enqueue_style('bootstrap_style');




/* code for custom post type of Event list starts */

function event_list_init() {
$args = array(
'label' => 'Event List',
'public' => true,
'has_archive' => true,
'show_ui' => true,
'capability_type' => 'post',
'hierarchical' => false,
'rewrite' => array('slug' => 'event_list'),
'query_var' => true,
'supports' => array(
'title',
'editor',
'excerpt',
'trackbacks',
'custom-fields',
'comments',
'revisions',
'thumbnail',
'author',
'page-attributes',)
);
register_post_type( 'event_list', $args );
}
add_action( 'init', 'event_list_init' );


/* ends  */


function weichie_load_more() {

$args = array(
'post_type' => 'event_list',
'post_status'  => 'publish',
'posts_per_page' => 6,
'orderby' => 'meta_value',
'meta_key' => 'event_start_date_time',
'order' => 'DESC',
'paged' => $_POST['paged']
);

$query = new WP_Query( $args );

$response = '';
$max_pages = $query->max_num_pages;
?>

<?php
if ( $query->have_posts() ) : 
ob_start();
while ( $query-> have_posts() ) : $query-> the_post();

$event_list_image = wp_get_attachment_image_src( get_post_thumbnail_id( $query->post->ID ), 'single-post-thumbnail' );
$event_start_date_time = get_field('event_start_date_time', $query->post->ID);
$event_end_date_time = get_field('event_end_date_time', $query->post->ID);



$start_date_time = date("M j | g:iA",strtotime(get_field('event_start_date_time', $query->post->ID)));
$start_date_time_arr = explode(" | ", date("M j | g:iA",strtotime(get_field('event_start_date_time', $query->post->ID))));

$start_date = $start_date_time_arr[0];
$start_time = $start_date_time_arr[1];

$end_date_time = date("j, Y | g:iA",strtotime(get_field('event_end_date_time', $query->post->ID)));
$end_date_time_arr = explode(" | ", date("j, Y | g:iA",strtotime(get_field('event_end_date_time', $query->post->ID))));

$end_date = $end_date_time_arr[0];
$end_time = $end_date_time_arr[1];

$meet_us_button_label = get_field('meet_us_button_label', $query->post->ID);

$cur_date_time = date("Y-m-d H:i:s", time());
$cur_date_time_str = strtotime($cur_date_time);
$event_end_date_time_str = strtotime($event_end_date_time);

?>


<div class="col-lg-4 col-md-4 col-sm-4 col-xs-12 cus_event_sec clearfix">
<img src="<?php  echo $event_list_image[0]; ?>" alt="<?php the_title();?>" class="img-responsive">
<div class="event_desc_sec">

<div class="event_status_sec">
<?php if($cur_date_time_str>$event_end_date_time_str){?>
<span class="past_event">PAST EVENT</span>
<?php } ?>
<span class="date_sec"><?php if($start_date){?><?php echo $start_date;?><?php } ?><?php if($end_date){?>-<?php echo $end_date;?><?php } ?></span>
</div> 

<h1><?php the_title();?></h1>
<p class="event_excerpt"><?php if ( has_excerpt() ) {?><?php echo strip_tags(get_the_excerpt($query->post->ID));?><?php } ?></p>
<a href="<?php the_permalink();?>" class="event_permalink"><?php if($meet_us_button_label!=''){?><?php echo $meet_us_button_label;?> <i class="fa fa-arrow-right" aria-hidden="true"></i>
<?php }else{?>MEET US <i class="fa fa-arrow-right" aria-hidden="true"></i><?php } ?></a>
</div>
</div>

<?php
endwhile;

$output = ob_get_contents();
ob_end_clean();
endif;

wp_reset_postdata(); // this should be inside if - there is no need to rested postdata if the_post hasnâ€™t been called.



$result = [
'max' => $max_pages,
'html' => $output,
];

echo json_encode($result);
exit;
}
add_action('wp_ajax_weichie_load_more', 'weichie_load_more');
add_action('wp_ajax_nopriv_weichie_load_more', 'weichie_load_more');